{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue sur la documentation du projet WAO Intranet \u00b6 \u00b6","title":"Accueil"},{"location":"#bienvenue-sur-la-documentation-du-projet-wao-intranet","text":"","title":"Bienvenue sur la documentation du projet WAO Intranet"},{"location":"#_1","text":"","title":""},{"location":"mkdocs/","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Deploy the website in github pages Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"MKDOCS"},{"location":"mkdocs/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"mkdocs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Deploy the website in github pages","title":"Commands"},{"location":"mkdocs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/about/","text":"Versions utilis\u00e9es \u00b6 Pour notre projet WAO intranet nous avons utilis\u00e9 Django pour le code et PostgreSQL pour les bases de donn\u00e9es Django 2.2.10 Python 3.7.4 PostgreSQL 10 Pour plus d'information, voir requirements.txt","title":"Informations globales"},{"location":"about/about/#versions-utilisees","text":"Pour notre projet WAO intranet nous avons utilis\u00e9 Django pour le code et PostgreSQL pour les bases de donn\u00e9es Django 2.2.10 Python 3.7.4 PostgreSQL 10 Pour plus d'information, voir requirements.txt","title":"Versions utilis\u00e9es"},{"location":"about/contributing/","text":"","title":"Contributions"},{"location":"about/license/","text":"","title":"License"},{"location":"about/release-notes/","text":"","title":"Notes de release"},{"location":"admin/admin/","text":"","title":"Pour l'admin"},{"location":"admin/how-to-use/","text":"","title":"Comment utiliser le site admin"},{"location":"admin/role/","text":"","title":"Role de l'admin"},{"location":"contact/contact-us/","text":"En cas de probl\u00e8me, n'h\u00e9sitez pas \u00e0 nous contacter : \u00b6 Vitor Albuquerque : vitor.albuquerque@student-cs.fr Le\u00efla Bekaddour : leila.bekaddour@student-cs.fr Yvan Lanore : yvan.lanore@student-cs.fr Matheus Elyasha Lopes : matheus-elyasha.lopes@student-cs.fr Nouha Manai : nouha.manai@student-cs.fr Thimot\u00e9 Montel : thimote.montel@student-cs.fr","title":"Contactez-nous"},{"location":"contact/contact-us/#en-cas-de-probleme-nhesitez-pas-a-nous-contacter","text":"Vitor Albuquerque : vitor.albuquerque@student-cs.fr Le\u00efla Bekaddour : leila.bekaddour@student-cs.fr Yvan Lanore : yvan.lanore@student-cs.fr Matheus Elyasha Lopes : matheus-elyasha.lopes@student-cs.fr Nouha Manai : nouha.manai@student-cs.fr Thimot\u00e9 Montel : thimote.montel@student-cs.fr","title":"En cas de probl\u00e8me, n'h\u00e9sitez pas \u00e0 nous contacter :"},{"location":"database/database/","text":"L'application WAO intranet contient diff\u00e9rentes bases de donn\u00e9es, ces derni\u00e8re sont impl\u00e9ment\u00e9es dans le fichier wao/models.py Si l'on souhaite cr\u00e9er une nouvelle base de donn\u00e9e il faudra le faire dans ce fichier. Pour plus d'information sur les bases de donn\u00e9es sur Django, veuillez consulter la documentation","title":"BDD"},{"location":"database/postgres/","text":"","title":"PostgreSQL"},{"location":"database/queries/","text":"","title":"SQL"},{"location":"deployment/deploy/","text":"","title":"Comment deploier le site"},{"location":"deployment/gestion-conflit/","text":"","title":"Gestion de possibles conflits"},{"location":"deployment/maintenance/","text":"","title":"Maintenance du site"},{"location":"deployment/server/","text":"","title":"Server"},{"location":"development/adding-feature/","text":"Pour cr\u00e9er une nouvelle fonctionnalit\u00e9 vous devez : \u00b6 Cr\u00e9er une url correspondant \u00e0 la page d\u00e9di\u00e9e \u00e0 votre fonctionnalit\u00e9 dans le fichier wao/urls.py Cr\u00e9er le fichier html correspondant \u00e0 votre nouvelle page dans le dossier wao/templates/wao Cr\u00e9er les requ\u00eates ayant un lien avec votre nouvelle page dans le fichier wao/views.py Si votre fonctionnalit\u00e9 n\u00e9cessite un formulaire, vous devez le cr\u00e9er dans le fichier wao/forms.py Pour modifier l'apparence de votre page vous devez cr\u00e9er un fichier css corespondant \u00e0 votre page dans le dossier wao/static/wao/css Si vous souhaitez ajouter des images et des polices pour votre page, ceci se fera dans le dossier wao/static/wao","title":"Comment ajouter une fonctionnalit\u00e9"},{"location":"development/adding-feature/#pour-creer-une-nouvelle-fonctionnalite-vous-devez","text":"Cr\u00e9er une url correspondant \u00e0 la page d\u00e9di\u00e9e \u00e0 votre fonctionnalit\u00e9 dans le fichier wao/urls.py Cr\u00e9er le fichier html correspondant \u00e0 votre nouvelle page dans le dossier wao/templates/wao Cr\u00e9er les requ\u00eates ayant un lien avec votre nouvelle page dans le fichier wao/views.py Si votre fonctionnalit\u00e9 n\u00e9cessite un formulaire, vous devez le cr\u00e9er dans le fichier wao/forms.py Pour modifier l'apparence de votre page vous devez cr\u00e9er un fichier css corespondant \u00e0 votre page dans le dossier wao/static/wao/css Si vous souhaitez ajouter des images et des polices pour votre page, ceci se fera dans le dossier wao/static/wao","title":"Pour cr\u00e9er une nouvelle fonctionnalit\u00e9 vous devez :"},{"location":"development/dev/","text":"Dans le projet GitHub de l'application, la branche sur laquelle va se faire le d\u00e9veloppement est la branche dev . Lorsque l'on souhaite modifier le code de l'application, on doit : * Cr\u00e9er une nouvelle branche (avec si possible un nom explicite, en rapport avec les modifications qui y seront faites) * Une fois les modification faites sur cette nouvelle branche, il convient de faire un commit auquel on donnera un titre explicit et une br\u00e8ve description du travail effectu\u00e9 sur la branche * On effectue ensuite une pull request * Une fois que l'ensemble des d\u00e9veloppeur c'est assur\u00e9 de l'absence de conflit entre le nouveaux code et le code qui \u00e9xistait d\u00e9j\u00e0, on peut alors merge la nouvelle branche sur la branche dev Il est fortement d\u00e9conseill\u00e9 de modifier directement la branche dev sous peine d'introduire des erreurs dans le code dont on ne peut connaitre l'origine","title":"Branch dev du site"},{"location":"development/run-project-locally/","text":"Clonez le projet sur votre PC et changez le r\u00e9pertoire : $ git clone git@github.com:We-Are-One-CS/intranet.git $ cd intranet/ Migrez la base de donn\u00e9e : $ python manage.py makemigrations wao $ python manage.py migrate --noinput lancez l'application sur un server Django : $ python manage.py runserver Maintenant vous devriez voir votre application en tapant http://127.0.0.1:8000 dans votre moteur de recherche. Quand vous avez fini, n'oublez pas de quitter le server : Quit the server with CTRL-BREAK ( In Windows ) Ctrl + C","title":"Executer le server en local"},{"location":"development/set-up-project/","text":"","title":"Set up du projet"},{"location":"development/testing/","text":"Avant de d\u00e9ployer l'application wao intranet, il est n\u00e9cessaire d'\u00e9ffectuer diff\u00e9rents tests pour s'assurer du fonctionnement de l'application. Nous avons d\u00e9j\u00e0 cod\u00e9 quelques tests de base avant de lancer notre version de l'application, mais dans l'\u00e9ventualit\u00e9 o\u00f9 de nouvelles fonctionnalit\u00e9es seraient ajouter \u00e0 l'application de base, il serait alors conseill\u00e9 d'\u00e9crire de nouveaux tests d\u00e9di\u00e9s \u00e0 cette fonctionnalit\u00e9 dans le fichier wao/tets.py pour en savoir plus sur les tests, veuillez consulter la documentation d\u00e9di\u00e9e","title":"Tests"},{"location":"development/tools/","text":"","title":"Outils de development"},{"location":"django/django/","text":"Principe de Django \u00b6 Django est un framework bas\u00e9 sur le principe MVC ou MTV compos\u00e9 de trois parties distinctes : Un langage de gabarits flexible qui permet de g\u00e9n\u00e9rer du HTML, XML ou tout autre format texte ; Un contr\u00f4leur fourni sous la forme d'un \u00ab remapping \u00bb d'URL \u00e0 base d'expressions rationnelles ; Une API d'acc\u00e8s aux donn\u00e9es est automatiquement g\u00e9n\u00e9r\u00e9e par le cadre compatible CRUD. Inutile d'\u00e9crire des requ\u00eates SQL associ\u00e9es \u00e0 des formulaires, elles sont g\u00e9n\u00e9r\u00e9es automatiquement par l'ORM. En plus de l'API d'acc\u00e8s aux donn\u00e9es, une interface d'administration fonctionnelle est g\u00e9n\u00e9r\u00e9e depuis le mod\u00e8le de donn\u00e9es. Un syst\u00e8me de validation des donn\u00e9es entr\u00e9es par l'utilisateur est \u00e9galement disponible et permet d'afficher des messages d'erreur automatiques. Sont \u00e9galement inclus : * un serveur web l\u00e9ger permettant de d\u00e9velopper et tester ses applications en temps r\u00e9el sans d\u00e9ploiement ; * un syst\u00e8me \u00e9labor\u00e9 de traitement des formulaires muni de widgets permettant d'interagir entre du HTML et une base de donn\u00e9es. De nombreuses possibilit\u00e9s de contr\u00f4les et de traitements sont fournies ; * un cadre de cache web pouvant utiliser diff\u00e9rentes m\u00e9thodes (MemCached, syst\u00e8me de fichier, base de donn\u00e9es, personnalis\u00e9) ; * le support de classes interm\u00e9diaires (intergiciel) qui peuvent \u00eatre plac\u00e9es \u00e0 des stades vari\u00e9s du traitement des requ\u00eates pour int\u00e9grer des traitements particuliers (cache, internationalisation, acc\u00e8s\u2026) ; * une prise en charge compl\u00e8te d'Unicode. Pour plus d'informations, consultez la documentation Django","title":"Le framework"},{"location":"django/django/#principe-de-django","text":"Django est un framework bas\u00e9 sur le principe MVC ou MTV compos\u00e9 de trois parties distinctes : Un langage de gabarits flexible qui permet de g\u00e9n\u00e9rer du HTML, XML ou tout autre format texte ; Un contr\u00f4leur fourni sous la forme d'un \u00ab remapping \u00bb d'URL \u00e0 base d'expressions rationnelles ; Une API d'acc\u00e8s aux donn\u00e9es est automatiquement g\u00e9n\u00e9r\u00e9e par le cadre compatible CRUD. Inutile d'\u00e9crire des requ\u00eates SQL associ\u00e9es \u00e0 des formulaires, elles sont g\u00e9n\u00e9r\u00e9es automatiquement par l'ORM. En plus de l'API d'acc\u00e8s aux donn\u00e9es, une interface d'administration fonctionnelle est g\u00e9n\u00e9r\u00e9e depuis le mod\u00e8le de donn\u00e9es. Un syst\u00e8me de validation des donn\u00e9es entr\u00e9es par l'utilisateur est \u00e9galement disponible et permet d'afficher des messages d'erreur automatiques. Sont \u00e9galement inclus : * un serveur web l\u00e9ger permettant de d\u00e9velopper et tester ses applications en temps r\u00e9el sans d\u00e9ploiement ; * un syst\u00e8me \u00e9labor\u00e9 de traitement des formulaires muni de widgets permettant d'interagir entre du HTML et une base de donn\u00e9es. De nombreuses possibilit\u00e9s de contr\u00f4les et de traitements sont fournies ; * un cadre de cache web pouvant utiliser diff\u00e9rentes m\u00e9thodes (MemCached, syst\u00e8me de fichier, base de donn\u00e9es, personnalis\u00e9) ; * le support de classes interm\u00e9diaires (intergiciel) qui peuvent \u00eatre plac\u00e9es \u00e0 des stades vari\u00e9s du traitement des requ\u00eates pour int\u00e9grer des traitements particuliers (cache, internationalisation, acc\u00e8s\u2026) ; * une prise en charge compl\u00e8te d'Unicode. Pour plus d'informations, consultez la documentation Django","title":"Principe de Django"},{"location":"django/python/","text":"Le framework Django utilise Python comme language de programmation. Pour coder l'application WAO intranet nous avons utilis\u00e9 Python 3.7.4 Pour aller plus loin, consultez la documentation Python","title":"Python"},{"location":"heroku/app/","text":"","title":"L'app weareone-intranet"},{"location":"heroku/data/","text":"","title":"Donn\u00e9es"},{"location":"heroku/heroku/","text":"","title":"Heroku"},{"location":"heroku/static-files/","text":"","title":"Fichiers statiques"},{"location":"production/checklist/","text":"","title":"Checklist de production"},{"location":"production/production/","text":"","title":"Production"}]}